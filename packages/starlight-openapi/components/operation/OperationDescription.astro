---
import { getOperationURLs, type PathItemOperation } from '../../libs/operation'
import type { Schema } from '../../libs/schema'

import OperationMethod from './OperationMethod.astro'
import OperationUrl from './OperationUrl.astro'

interface Props {
  operation: PathItemOperation
  schema: Schema
}

const { operation: pathItemOperation, schema } = Astro.props
const { method, path } = pathItemOperation

const urls = getOperationURLs(schema.document, pathItemOperation)
---

<div class="not-content operation-description-container">
  {
    path ? (
      urls.length > 0 ? (
        <details class="operation-description-urls" open={true}>
          <summary></summary>
          <OperationMethod {method} {path} />
          <ul>
            {urls.map(({ description, url }) => (
              <OperationUrl {description} {url} />
            ))}
          </ul>
        </details>
      ) : (
        <div class="operation-description">
          <OperationMethod {method} {path} />
        </div>
      )
    ) : (
      <OperationMethod {method} />
    )
  }
</div>

<style>
  .operation-description,
  .operation-description-urls {
    background-color: var(--astro-code-color-background);
    border: 1px solid var(--sl-color-gray-5);
    font-size: var(--sl-text-sm);
  }

  summary {
    display: none;
  }

  summary,
  .operation-description {
    align-items: center;
    display: flex;
    font-family: var(--__sl-font-mono);
    padding: 0.8rem 1rem;
  }

  summary::marker,
  summary::-webkit-details-marker {
    display: none;
  }

  ul {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
    list-style-type: none;
    margin-left: 0;
  }
</style>
